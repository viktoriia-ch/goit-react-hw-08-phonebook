{"version":3,"file":"static/js/922.9e021260.chunk.js","mappings":"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","sources":["modules/RegisterForm/initialState.js","modules/RegisterForm/fields.js","webpack://react-homework-template/./src/modules/RegisterForm/register-form.module.css?5984","modules/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.scss?9580","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/shared/components/Title/title.module.css?e9d1","shared/components/Title/Title.jsx","shared/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Name',\n    placeholder: 'enter name',\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'Email',\n    placeholder: 'enter email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'Password',\n    placeholder: 'enter password',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"register-form_form__R0LAM\"};","import useForm from 'shared/hooks/useForm';\nimport Title from 'shared/components/Title/Title';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\nimport initialState from './initialState';\nimport fields from './fields';\n\nimport styles from './register-form.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <Title text=\"Register page\" />\n      <TextField\n        value={state.name}\n        handleChange={handleChange}\n        {...fields.name}\n      />\n      <TextField\n        value={state.email}\n        handleChange={handleChange}\n        {...fields.email}\n      />\n      <TextField\n        value={state.password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button type=\"submit\" text=\"Register\" />\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useDispatch } from 'react-redux';\n\nimport { signup } from 'redux/auth/auth-operations';\nimport RegisterForm from 'modules/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      <RegisterForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__uXPTj\"};","import styles from './button.module.scss';\n\nconst Button = ({ text, type }) => {\n  return (\n    <button type={type} className={styles.btn}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__T6+0F\"};","import styles from './title.module.css';\n\nconst Title = ({ text }) => {\n  return <h1 className={styles.title}>{text}</h1>;\n};\n\nexport default Title;\n","import { useState, useCallback } from \"react\";\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState((prevState) => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState(initialState);\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","email","password","type","required","label","placeholder","onSubmit","useForm","initialState","state","handleChange","handleSubmit","className","styles","Title","text","TextField","value","fields","Button","dispatch","useDispatch","data","signup","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","useState","setState","useCallback","prevState","event","preventDefault"],"sourceRoot":""}