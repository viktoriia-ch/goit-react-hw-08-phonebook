{"version":3,"file":"static/js/23.1b574672.chunk.js","mappings":"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","sources":["modules/LoginForm/fields.js","modules/LoginForm/initialState.js","modules/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","shared/hooks/useForm.js"],"sourcesContent":["const fields = {\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    placeholder: 'enter email',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    placeholder: 'enter password',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import useForm from 'shared/hooks/useForm';\nimport TextField from 'shared/components/TextField/TextField';\nimport fields from './fields';\nimport initialState from './initialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        value={state.email}\n        handleChange={handleChange}\n        {...fields.email}\n      />\n      <TextField\n        value={state.password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <button>Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { isLogin } from 'redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\nimport { login } from 'redux/auth/auth-operations';\nimport LoginForm from 'modules/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const isUserLogin = useSelector(isLogin);\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isUserLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <div>\n      <h2>Login page</h2>\n      <LoginForm onSubmit={handleLogin} />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <label htmlFor={id}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useCallback } from \"react\";\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState((prevState) => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState(initialState);\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["email","type","name","required","label","placeholder","password","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","fields","dispatch","useDispatch","useSelector","isLogin","to","data","login","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange","useState","setState","useCallback","prevState","event","preventDefault"],"sourceRoot":""}