{"version":3,"file":"static/js/479.55b772f1.chunk.js","mappings":"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","sources":["modules/ContactForm/fields.js","webpack://react-homework-template/./src/modules/ContactForm/contact-form.module.css?d899","modules/ContactForm/ContactForm.jsx","redux/filter/filter-selectors.js","webpack://react-homework-template/./src/modules/Filter/filter.module.css?eee7","modules/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","webpack://react-homework-template/./src/modules/ContactList/contact-list.module.css?591f","modules/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://react-homework-template/./src/shared/components/Button/button.module.css?dd0a","shared/components/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://react-homework-template/./src/shared/components/TextField/text-field.module.css?f04f","shared/components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/shared/components/Title/title.module.css?e9d1","shared/components/Title/Title.jsx"],"sourcesContent":["const fields = {\n  name: {\n    label: 'Name',\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    type: 'text',\n    name: 'name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    required: true,\n    placeholder: 'enter name...',\n  },\n  number: {\n    label: 'Number',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    type: 'tel',\n    name: 'number',\n    pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    required: true,\n    placeholder: 'enter number...',\n  },\n};\n\nexport default fields;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"contact-form_form__KERgr\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Title from 'shared/components/Title/Title';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\nimport fields from './fields';\n\nimport {\n  fetchContacts,\n  addContact,\n} from '../../redux/contacts/contacts-operations';\n\nimport styles from './contact-form.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleAddContact = ({ name, number }) => {\n    return dispatch(addContact({ name, number }));\n  };\n\n  const handleChangeName = ({ target: { value } }) => {\n    setName(value);\n  };\n\n  const handleChangeNumber = ({ target: { value } }) => {\n    setNumber(value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    handleAddContact({ name, number }).then(\n      response =>\n        response.type === 'contacts/addContact/fulfilled' && resetForm()\n    );\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <Title text=\"Phonebook\" />\n      <TextField onChange={handleChangeName} value={name} {...fields.name} />\n      <TextField\n        onChange={handleChangeNumber}\n        value={number}\n        {...fields.number}\n      />\n      <Button type=\"submit\" text=\"Add contact\" />\n    </form>\n  );\n};\n\nexport default ContactForm;\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"filter_title__ukpgx\",\"input\":\"filter_input__78dr-\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filter-slice';\nimport { getFilter } from '../../redux/filter/filter-selectors';\nimport styles from './filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div>\n      <h2 className={styles.title}>Contacts</h2>\n      <label>\n        Find contacts by name:\n        <input\n          onChange={handleFilter}\n          name=\"filter\"\n          placeholder=\"filter contacts...\"\n          value={filter}\n          className={styles.input}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","export const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.items.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(normalizedFilter) ||\n      number.toLowerCase().includes(normalizedFilter)\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contact-list_list__8FcVk\",\"item\":\"contact-list_item__BN9TV\",\"btn\":\"contact-list_btn__EvjFU\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport styles from './contact-list.module.css';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const contactList = filteredContacts.map(contact => {\n    const handleRemoveContact = id => {\n      dispatch(deleteContact(id));\n    };\n\n    return (\n      <li key={contact.id} className={styles.item}>\n        <span>\n          {contact.name}: {contact.number}\n        </span>\n\n        <button\n          className={styles.btn}\n          onClick={() => handleRemoveContact(contact.id)}\n          type=\"button\"\n        >\n          x\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className={styles.list}>{contactList}</ul>;\n};\n\nexport default ContactList;\n","import ContactForm from 'modules/ContactForm/ContactForm';\nimport Filter from 'modules/Filter/Filter';\nimport ContactList from 'modules/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <div>\n        <ContactForm />\n        <Filter />\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__aZIRC\"};","import styles from './button.module.css';\n\nconst Button = ({ text, type }) => {\n  return (\n    <button type={type} className={styles.btn}>\n      {text}\n    </button>\n  );\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"text-field_input__YM8fs\"};","import { useMemo } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport styles from './text-field.module.css';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n\n  return (\n    <div>\n      <label className={styles.label} htmlFor={id}>\n        {label}\n      </label>\n      <input\n        className={styles.input}\n        id={id}\n        onChange={handleChange}\n        {...props}\n      />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"title_title__T6+0F\"};","import styles from './title.module.css';\n\nconst Title = ({ text }) => {\n  return <h1 className={styles.title}>{text}</h1>;\n};\n\nexport default Title;\n"],"names":["name","label","title","type","pattern","required","placeholder","number","useState","setName","setNumber","dispatch","useDispatch","useEffect","fetchContacts","onSubmit","event","preventDefault","addContact","handleAddContact","then","response","className","styles","Title","text","TextField","onChange","value","target","fields","Button","getFilter","filter","useSelector","setFilter","getFilteredContacts","contacts","items","normalizedFilter","toLowerCase","includes","filteredContacts","contactList","map","contact","onClick","id","deleteContact","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","handleChange","props","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor"],"sourceRoot":""}